@model Sinem.Models.AsistenciaEstudiante

@{
    ViewBag.Title = "Editar"; @* titulo edit *@
}

<h2>Editar</h2> @*tamaño titulo*@


@using (Html.BeginForm())
{

<div class="form-horizontal">
    <h4>AsistenciaEstudiante</h4> @* tamaño titulo *@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })  @* En esta seccion se utiliza para mostrar todos los mensajes de error dela casilla*@
    @* Acontinuacion se puede ver los campos son manipulaosdos por el sistema y que no se desplieguen*@
    @Html.HiddenFor(model => model.idAsistenciaEstudiante)
                                             @*Es la sintaxis de bootstrap*@
    <div class="form-group">
        @Html.LabelFor(model => model.idGestionCurso, htmlAttributes: new { @class = "control-label col-md-2" }) @*En esta seccion el label for muestra la etiqueta*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.idGestionCurso, new { htmlAttributes = new { @class = "form-control" } }) @* Es el valor ,En esta seccion es el resultado del render puede variar dependiendo del tipo de dato de la propiedad que representa*@
            @Html.ValidationMessageFor(model => model.idGestionCurso, "", new { @class = "text-danger" }) @*En esta seccion tira el mesaje de error*@
        </div>
    </div>
    @**@
    <div class="form-group">
        @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
        </div>
    </div>
    @**@
    <div class="form-group">
        @Html.LabelFor(model => model.asistio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.asistio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.asistio, "", new { @class = "text-danger" })
        </div>
    </div>
    @**@
    <div class="form-group">
        @Html.LabelFor(model => model.observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.observaciones, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.observaciones, "", new { @class = "text-danger" })
        </div>
    </div>
    @**@
    <div class="form-group">
        @Html.LabelFor(model => model.idUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idUsuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idUsuario, "", new { @class = "text-danger" })
        </div>
    </div>
    @*boton crear *@
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    @* Acontinuacion se puede ver los campos son manipulaosdos por el sistema y que no se desplieguen*@
    @Html.Hidden("fechaModifica", Model.fechaModifica.ToShortDateString())
    @Html.HiddenFor(model => model.usuarioModifica)

}

<div>
    @Html.ActionLink("Regresar", "Index") @*Boton de regresar*@
</div>
@*para genrar el codigo de scripts de javascript para que se muetre el lugar correcto de la pagina*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
