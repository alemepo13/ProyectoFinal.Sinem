@model Sinem.Models.Usuario

@{
    /**/

    ViewBag.Title = "Create";
}



<link href="~/Content/Site.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


@*Este el el codigo desarrollado para que no se puedan teclear las letras y que solo los numeros se puedan usar*@
<script language='JavaScript'>
    function SomenteNumero(e) {
        var tecla = (window.event) ? event.keyCode : e.which;
        if ((tecla > 47 && tecla < 58)) return true;
        else {
            if (tecla == 8 || tecla == 0) return true;
            else return false;
        }
    }
</script>

@*<input type='text' size='10' value='' onkeypress='return SomenteNumero(event)'>*@


<h2>Create</h2>



@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Formulario" }))
            {

<div class="form-horizontal">
    <h4>Usuario</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Provincia", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="provincias"></select>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Canton", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="cantones"></select>
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Distrito", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="distritos"></select>
        </div>
    </div>


    @Html.Hidden("idDireccion", Model?.idDireccion)

    <div class="form-group">
        @Html.LabelFor(model => model.idRol, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBox("idRol", ViewBag.ListaDeRoles as MultiSelectList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idRol, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tipoIdentificacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("tipoIdentificacion", ViewBag.ListaDeTipos as SelectList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.tipoIdentificacion, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.identificacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.identificacion, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return SomenteNumero(event)" } })
            @*  @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.identificacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
        </div>
    </div>

    
    <div class="form-group">
        @Html.LabelFor(model => model.fechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="form-group">
            <input type="text" class="form-control date-picker" value="" data-datepicker-color="primary" id="fechaNacimiento" name="fechaNacimiento">
        </div>

        @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.usuario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.usuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.usuario, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.contraseña, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { id = "contraseña", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.contraseña, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>


    @Html.Hidden("fechaRegistro", DateTime.Today.ToShortDateString())
    @Html.Hidden("usuarioCrea", User.Identity.Name)

    @Html.Hidden("fechaModifica", DateTime.Today.ToShortDateString())
    @Html.Hidden("usuarioModifica", User.Identity.Name)
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @*Scripts.Render("~/bundles/jqueryval")*@

<script>
    function hash(algo, str) {
        return crypto.subtle.digest(algo, new TextEncoder().encode(str));
    }
    function enconde64(buff) {
        return btoa(new Uint8Array(buff).reduce((s, b) => s + String.fromCharCode(b), ''));
    }
    $("#Formulario").submit(function (e) {
        e.preventDefault();
        var form = this;
        hash('SHA-256', form.contraseña.value).then(hashed => {
            form.contraseña.value = enconde64(hashed);
            $("#contraseña").hide();
            form.submit();
        });
    });

    $(document).ready(function () {
        var idDireccion = $("#idDireccion").val();
        var initial = true;
        $.get("/Usuarios/ListaProvincias", { id: idDireccion }, function (data) { $("#provincias").html(data); });
        $.get("/Usuarios/ListaCantones", { id: idDireccion, idProv:'' }, function (data) { $("#cantones").html(data); });
        $.get("/Usuarios/ListaDistritos", { id: idDireccion, idProv:'',idCant:'' }, function (data) { $("#distritos").html(data); });
        $("#provincias").change(function () {
            if (initial) return;
            var valor = $("#provincias option:selected").val();
            if (valor == null) return;
            $("#cantones").html("");
            $("#distritos").html("");
            $.get("/Usuarios/ListaCantones", { id: null, idProv: valor }, function (data) { $("#cantones").html(data); });
        });
        $("#cantones").change(function () {
            if (initial) return;

            var valorProv = $("#provincias option:selected").val();
            var valor = $("#cantones option:selected").val();
            if (valor == null) return;
            $("#distritos").html("");
            $.get("/Usuarios/ListaDistritos", { id: null, idProv: valorProv,idCant: valor }, function (data) { $("#distritos").html(data); });
        });

        $("#distritos").change(function () {
            if (initial) return;
            var valor = $("#distritos option:selected").val();
            if (valor == null) return;
            $("#idDireccion").val(valor);;
        });
        setTimeout(function () { initial = false; }, 500);
    });
    $('.date-picker').each(function () {
        $(this).datepicker({
            format: 'dd/mm/yyyy',
            templates: {
                leftArrow: '<i class="now-ui-icons arrows-1_minimal-left"></i>',
                rightArrow: '<i class="now-ui-icons arrows-1_minimal-right"></i>'
            }
        }).on('show', function () {
            $('.datepicker').addClass('open');

            datepicker_color = $(this).data('datepicker-color');
            if (datepicker_color.length != 0) {
                $('.datepicker').addClass('datepicker-' + datepicker_color + '');
            }
        }).on('hide', function () {
            $('.datepicker').removeClass('open');
        });
    });
</script>

}
